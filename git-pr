#! /usr/bin/env ruby

GEM_DEPS = %w[commander/import octokit]

GEM_DEPS.each do |gem|
  begin
    require "#{gem}"
  rescue LoadError => e
    puts "You must install the '#{gem}' gem in order to use git-pr"
  end
end

class GitPr
  VERSION         = "0.0.1"
  GIT_REPO_REGEXP = /(git:\/\/|https:\/\/|git@)([A-Za-z0-9.]+)(\/|:)([A-Za-z0-9\-_]+)\/([A-Za-z0-9\-_]+)\.git/

  def initialize(args = ARGV)
    @args = args
    raise ArgumentError, "Need to specify a repo num" if args.size < 1
    @repo_name = repo_name
  end

  def repo_name
    if `git remote -v` =~ GIT_REPO_REGEXP
      "#{$4}/#{$5}"
    end
  end

  def repo
    Octokit::Repository.new(@repo_name)
  end

  def pull_num
    @args[0].strip
  end

  def client
    @client ||= Octokit::Client.new
  end

  def pull
    @pull ||= client.pull(repo, pull_num)
  end

  def head
    pull.head
  end

  def url
    @url ||= pull.url.gsub(/api\./, '').gsub(/\/repos/, '').gsub(/pulls/, 'pull')
  end

  def open_repo
    puts "Opening #{url} ..."
    `open #{url}`
  end

  def clone_test_repo
    folder_name = head.label.sub(':', '-')
    `git clone #{head.repo.git_url} #{folder_name}`
    Dir.chdir(folder_name) do
      `git checkout #{head.ref}`
    end
  end
end

program :name, "git-pr"
program :version, GitPr::VERSION
program :description, "Handle testing GitHub PRs and such."

default_command :help

command :open do |c|
  c.syntax = "git-pr open NUM"
  c.description = "Opens the PR page on GitHub."

  c.action do |args, options|
    GitPr.new(args).open_repo
  end
end

command :test do |c|
  c.syntax = "git-pr test NUM"
  c.description = "Clones a version of the current repo with the changes proposed."

  c.action do |args, options|
    GitPr.new(args).clone_test_repo
  end
end
